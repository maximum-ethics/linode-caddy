- hosts: attenborough
  become: yes
  vars:
    caddy_binary_url: https://github.com/caddyserver/caddy/releases/download/v2.0.0-beta.13/caddy2_beta13_linux_amd64
    domain: sunrisemovement.dev

  tasks:
# some tips for systemd services: https://github.com/caddyserver/caddy/blob/master/dist/init/linux-systemd/README.md
  - name: install caddy.service file
    copy:
      src: roles/sunrise/files/caddy.service
      dest: /etc/systemd/system
      owner: root
      group: root
      mode: u=rw,g=r,o=r
    notify:
      - reload caddy
  - name: create /etc/caddy directory
    file:
      path: /etc/caddy
      state: directory
      owner: www-data
      group: www-data
      mode: '0755'
  - name: create data directory # it's not just tls certificates
    file:
      path: /etc/caddy/storage
      state: directory
      owner: www-data
      group: www-data
      mode: '0755'
  - name: create folder for config autosave
    file:
      path: /var/www
      state: directory
      owner: www-data
      group: www-data
      mode: '0755'

  # - name: install Caddyfile
  #   copy:
  #     src: roles/sunrise/files/Caddyfile
  #     dest: /etc/caddy/Caddyfile
  #     owner: root
  #     group: root
  #     mode: '0644'
  #   notify:
  #     - reload caddy
  #   tags: caddyfile
  - name: include variables (need admin e-mail)
    include_vars:
      file: roles/sunrise/vars/main.yml
    tags: caddyfile
  - name: install Caddyfile from template
    template:
      src: roles/sunrise/templates/Caddyfile.j2
      dest: /etc/caddy/Caddyfile
      owner: root
      group: root
      mode: '0644'
    notify:
      - reload caddy
    tags: caddyfile

  - name: create srv directory to hold website data
    file:
      path: /srv/{{ domain }}
      state: directory
      owner: www-data
      group: www-data
      mode: '0555'
  - name: install test website
    copy:
      src: roles/sunrise/files/index.html
      dest: /srv/{{ domain }}/public/

  - name: create tmp dir for caddy download
    file:
      path: "/tmp/{{ ansible_date_time.date }}-caddydownload"
      state: directory
      mode: 0755
  - name: download Caddy binary
    get_url:
      url: "{{ caddy_binary_url }}"
      dest: "/tmp/{{ ansible_date_time.date }}-caddydownload/caddy"
      mode: 0755
  # - name: replace caddy binary
  #   synchronize:
  #     mode: pull
  #     src: "/tmp/{{ ansible_date_time.date }}-caddydownload/caddy"
  #     dest: /usr/local/bin/caddy
  #   delegate_to: "{{ inventory_hostname }}"
  - name: replace caddy binary
    copy:
      remote_src: yes
      src: "/tmp/{{ ansible_date_time.date }}-caddydownload/caddy"
      dest: /usr/local/bin/caddy
    notify:
      - restart caddy
  - name: ensure binary is executable
    file:
      path: /usr/local/bin/caddy
      owner: www-data
      group: www-data
      mode: u=rwx,g=rx,o=rx

  - name: start caddy service
    service:
      name: caddy
      state: started
  - name: enable caddy service
    service:
      name: caddy
      enabled: yes

  handlers:
  # - name: just force systemd to reread configs (2.4 and above)
  #   systemd:
  #     daemon_reload: yes
  #   listen: "reload caddy"
  - name: reload caddy
    service:
      name: caddy
      state: reloaded
    # listen: "reload caddy"
  - name: restart caddy
    service:
      name: caddy
      state: restarted
    listen: restart caddy
  - name: let caddy bind to ports 80 and 443
    capabilities:
      path: /usr/local/bin/caddy
      capability: cap_net_bind_service=+ep
      state: present
    listen: restart caddy
