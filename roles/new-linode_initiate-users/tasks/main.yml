# tasks on remote server once it has been created, as root #
# TODO: DISABLE RUNNING THESE TASKS IF SERVER ALREADY EXISTED (how tho?)
# https://github.com/sunrisemovement/devops/issues/9

- name: Don't do anything until server is reachable via SSH
  wait_for_connection:
    delay: 10
    timeout: 90
# If the role fails here, and you can ping the hostname but not ssh to it,
# try making a meaningless edit to your local /etc/hosts, or overwriting it
# with no change using e.g. sudo nano /etc/hosts with ctrl+O. I don't know why
# that would fix anything, but it does on my old Macbook Pro.
- name: Gather facts for first time
  setup:

- name: Disallow password authentication
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "^PasswordAuthentication"
    line: "PasswordAuthentication no"
    state: present
  notify: restart ssh

- name: Make sure we have a 'wheel' group
  group:
    name: wheel
- name: Allow 'wheel' group to execute any command
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%wheel'
    line: '%wheel ALL=(ALL) ALL'
    validate: 'visudo -cf %s'

- name: print users
  debug:
    var: users
    verbosity: 2

- name: create temporary list of users, excluding the admin running this role
  set_fact:
    self_excluded_users: "{{ _list | from_yaml }}"
  loop: "{{ users }}"
  when: item.name != prompt_user
  vars:
    _list: |-
      - {{ item }}

- name: Add sudoing user accounts for sysadmins (other than you)
  user:
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    groups: wheel
    append: yes
    update_password: on_create
  loop: "{{ self_excluded_users }}"
  register: new_accounts
  tags: add_users

- name: Add sudoing user account for admin running the role
  user:
    name: "{{ prompt_user }}"
    password: "{{ prompt_password }}"
    groups: wheel
    append: yes
  tags: add_users

- name: print the array of new accounts (not including yourself)
  debug:
    var: new_accounts
    verbosity: 2

- name: Add ssh keys for all sysadmins
  authorized_key:
    user: "{{ item.0.name }}"
    key: "{{ item.1 }}"
# old syntax for doing loop with subelements:
# https://docs.ansible.com/ansible/latest/plugins/lookup/subelements.html
  # with_subelements:
  #   - "{{ users }}"
  #   - sshKey
# new syntax described here:
# https://docs.ansible.com/ansible/latest/user_guide/playbooks_loops.html#with-subelements
  loop: "{{ users|subelements('sshKey') }}"
  tags: authorized_keys
