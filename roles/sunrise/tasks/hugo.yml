---
- name: install latest Hugo .deb from Github
  apt:
    deb: '{{ hugo_deb_url }}'
  when: ansible_os_family == 'Debian'

# TODO: Create our own apt repository for Caddy and Hugo
# Or possibly help maintain the packages in Arch to make sure they stay up to date

- name: install Caddyfile from template
  template:
    src: '{{ caddyfile_name }}'
    dest: /etc/caddy/Caddyfile
    owner: root
    group: root
    mode: '0644'
  notify:
    - reload caddy

# Create site directories
- name: create srv directory if it doesn't exist
  file:
    path: /srv/{{ item.domain }}/{{ item.subdomain }}/public
    state: directory
    mode: 0755
    owner: '{{ web_server_user }}'
    group: '{{ web_server_user }}'
  loop: '{{ hugo_sites }}'
  register: created_directories

- name: print created_directories
  debug:
    var: created_directories
    verbosity: 1

  # item.item is used because we're iterating over the registered results from creating the directories.
  # see https://docs.ansible.com/ansible/latest/user_guide/playbooks_loops.html#registering-variables-with-a-loop for results structure

  # Create Site Directories task loops over hugo_sites to make directories for each element of the hugo_sites array (a Hugo website). 
  # The output of each loop iteration is stored in created_directories.
  # Each output item in created_directories has a subelement named item, 
  # which stores the hugo_sites element that the Create Site Directories task was run on.
  # Thus, in this task, item refers to the loop output collection of metadata, 
  # item.item is the subelement that contains the hugo_sites element previously described.
- name: create new Hugo site
  command: hugo new site /srv/{{ item.item.domain }}/{{ item.item.subdomain }}/public
  become: yes
  become_user: '{{ web_server_user }}'
  when: item.changed
  loop: '{{ created_directories.results }}'

- name: clone git theme
  git:
    repo: '{{ item.theme_repo }}'
    dest: /srv/{{ item.domain }}/{{ item.subdomain }}/public/themes/{{ item.theme_name }}
  become: yes
  become_user: '{{ web_server_user }}'
  loop: '{{ hugo_sites }}'
  register: theme_changes
  notify: re-generate Hugo site

- name: create config.toml file from template
  template:
    src: config.toml.j2
    dest: /srv/{{ item.domain }}/{{ item.subdomain }}/public/config.toml
    owner: '{{ web_server_user }}'
    group: '{{ web_server_user }}'
  loop: '{{ hugo_sites }}'
  register: config_changes
  notify: re-generate Hugo site

- name: print theme_changes
  debug:
    var: theme_changes
    verbosity: 1
- name: print config_changes
  debug:
    var: config_changes
    verbosity: 1